{
  "rules": {
    "users": {
      ".indexOn": ["msuUid"],
      "$uid": {
        ".read": "
          // Must be signed in
          auth != null
          // Can read your own user record or be an instructor or be an admin
          && (
            auth.uid === $uid
            || root.child('roles/'+auth.uid+'/instructor').val() === true
            || root.child('roles/'+auth.uid+'/admin').val() === true
          )
        ",
        ".write": "
          // Must be signed in
          auth != null
          && (
            // Can write if you're creating your own user record (signing up)
            (!data.exists() && auth.uid === $uid)
            // Can write if you're an admin
            || root.child('roles/'+auth.uid+'/admin').val() === true
          )
        ",

        "msuUid": {
          ".validate": "
            // Field is optional
            !newData.exists()
            // If provided, must be a string
            || (newData.isString() && newData.val().length > 0)
          "
        },
        "fullName": {
          // Field is a required string
          ".validate": "newData.exists() && newData.isString() && newData.val().length > 0"
        },
        "email": {
          // Field is a required string
          ".validate": "newData.exists() && newData.isString() && newData.val().length > 0"
        },
        "$other": {
          // Only the above fields are permitted
          ".validate": false
        }
      }
    },

    "roles": {
      "$uid": {
        ".read": "
          // Must be signed in
          auth != null
          // Can read your own user record or be an instructor or be an admin
          && (
            auth.uid === $uid
            || root.child('roles/'+auth.uid+'/instructor').val() === true
            || root.child('roles/'+auth.uid+'/admin').val() === true
          )
        ",
        ".write": "
          // Must be signed in
          auth != null
          && (
            // Can write if you're creating your own user record (signing up)
            (!data.exists() && auth.uid === $uid)
            // Can write if you're an admin
            || root.child('roles/'+auth.uid+'/admin').val() === true
          )
        ",
        ".validate": "
          (
            // Short-circuit if updating
            data.exists()
            || (
              // If creating (signing up), student role is required
              newData.child('student').val() === true
              // All other roles must be left out or set to false
              && (!newData.child('instructor').exists() || newData.child('instructor').val() === false)
              && (!newData.child('admin').exists() || newData.child('admin').val() === false)
            )
          )
          // At least one role must be set to true
          && (
            newData.child('student').val() === true
            || newData.child('instructor').val() === true
            || newData.child('admin').val() === true
          )
        ",

        "student": {
          // Field is an optional boolean
          ".validate": "newData.isBoolean()"
        },
        "instructor": {
          // Field is an optional boolean
          ".validate": "newData.isBoolean()"
        },
        "admin": {
          // Field is an optional boolean
          ".validate": "newData.isBoolean()"
        },
        "$other": {
          // Only the above fields are permitted
          ".validate": false
        }
      }
    },

    "lessons": {
      ".read": "auth != null",
      ".write": "auth != null"
    }
  }
}
