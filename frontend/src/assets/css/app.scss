@import "tailwind/_preflight";

$gutterWidth: config('margin.gutter-width');
$muted-light-success: get('colors.muted-light-success');
$muted-light-red: get('colors.muted-light-red');
$muted-light-gray: get('colors.muted-light-gray');
$muted-light-yellow: get('colors.muted-light-yellow');
$muted-light-note: get('colors.muted-light-note');
$brand-warning-light: get('colors.warning-light');
$brand-warning-dark: get('colors.warning-dark');
$brand-danger-light: get('colors.danger-light');
$brand-danger-dark: get('colors.danger-dark');
$brand-note-dark: get('colors.note-dark');
$brand-note-light: get('colors.note-light');
$brand-default-light: get('colors.default-light');
$brand-primary-light: get('colors.primary-light');
$brand-primary-dark: get('colors.primary-dark');
$control-border-color: get('colors.border-color');
$control-border-radius: get('borderRadius.control-radius');

*,
*:before,
*:after {
  box-sizing: border-box;
}

html {
  @apply .bg-image .bg-grey-lightest .text-black .font-light .font-serif;
  @apply .overflow-x-hidden;
}

body {
  @apply .leading-normal;
}

a {
  @apply .text-primary-lighter .no-underline;

  &:hover {
    @apply .text-primary-dark .underline;
  }

  &[name] {
    @apply .relative .text-primary-dark;

    &:hover:before {
      @apply .absolute;
      left: -0.8em;
    }
  }

  &.container-link {
    @apply .text-inherit;

    &:hover {
      @apply .text-inherit .no-underline;
    }
  }

  &:not(.button):not(.icon-link)[target=_blank]:not([href$=".jpg"]):not([href$=".jpeg"]):not([href$=".svg"]):not([href$=".png"]):not([href$=".gif"]) {
    &:after {
      @apply .bg-primary .external-link-image;
    }
  }
}

abbr,
abbr[title],
acronym,
acronym[title] {
  @apply .no-underline .border-none;
}

.button, button, input[type="submit"], input[type="reset"], input[type="button"] {
  @apply .inline-block .h-control-height;
  @apply .py-0 .px-control-x .text-text-color .text-center;
  @apply .text-control-font-size .font-semibold .leading-control-line-height;
  letter-spacing: .1rem;
  @apply .uppercase .no-underline .whitespace-no-wrap;
  @apply .bg-default-light .rounded-control-radius;
  @apply .border .border-solid .border-border-color;
  @apply .cursor-pointer;
  &:hover, &:focus {
    @apply .outline-none .no-underline;
    border-color: darken(get('colors.border-color'), 30%);
  }
  &[disabled] {
    @apply .opacity-disabled .cursor-not-allowed;
  }
  &.block {
    @apply .block .w-full .my-gutter-width;
  }
  &.inline {
    @apply .h-auto .align-middle;
    line-height: 1.7;
    $paddingVertical: get('padding.control-vertical');
    padding: 2px calc(#{$paddingVertical} - 1px) 0 #{$paddingVertical};
  }
  &.primary {
    @apply .text-default-light .bg-primary-light .border-primary-dark;
    &:hover, &:focus {
      background-color: darken(get('colors.primary-light'), 10%);
    }
  }
  &.danger {
    @apply .text-default-light .bg-danger-light .border-danger-dark;
    &:hover, &:focus {
      background-color: darken(get('colors.danger-light'), 10%);
    }
  }
  &.warning {
    @apply .text-default-light .bg-warning-light .border-warning-dark;
    &:hover, &:focus {
      background-color: darken(get('colors.warning-light'), 10%);
    }
  }
  &.extra-large {
    $controlHeight: get('height.control-height');
    $button-extra-large-height: calc(#{$controlHeight} * 3);
    height: $button-extra-large-height;
    line-height: $button-extra-large-height;
    font-size: calc(#{$button-extra-large-height} * .3);
    padding: 0 calc(#{$button-extra-large-height} * .4);
  }

}

h1, h2, h3, h4, h5, h6 {
  font-family: Lato;
  line-height: 1.3;
}

h1, h2 {
  margin-top: 0;
}

h3 {
  margin-top: calc(#{$gutterWidth} * 2);
  margin-bottom: $gutterWidth;
}

h4 {
  margin-top: calc(#{$gutterWidth} * 1.5);
  margin-bottom: $gutterWidth;
  text-transform: uppercase;
  code {
    text-transform: none;
  }
}

p {
  margin: #{$gutterWidth} 0;
}

:not(pre) > code {
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  @apply .bg-muted-light-gray .rounded-control-radius;
  vertical-align: baseline;
  &:before, &:after {
    content: '\00a0';
    letter-spacing: -0.2em;
  }
}

img {
  max-width: 100%;
}

video, audio {
  width: 100%;
}

iframe {
  width: 100%;
  border: none;
}

hr {
  width: 30%;
  border: none;
  border-top: 5px solid #{$brand-primary-dark};
  border-radius: 5px;
  margin: #{$gutterWidth} auto;
}

blockquote {
  font-size: 1.3em;
  margin: 0;
  padding: $gutterWidth;
  border-left: 5px solid rgba(0,0,0,.1);
}

strong, b {
  font-weight: 700;
}

summary {
  cursor: pointer;
  &:focus {
    outline: none;
  }
}

// -----------
// CODE BLOCKS
// -----------

$code-tag-font-size: 10px;
$code-tag-padding-vertical: 1px;
$code-background: get('colors.code-background');

code {
  @apply .font-mono;
}

pre:not(.CodeMirror-line) {
  overflow-y: hidden;
  position: relative;
  @apply .rounded-control-radius;
  &:before, &:after {
    content: '';
    width: $gutterWidth;
    height: 100%;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  &:before {
    left: 0;
    background-image: linear-gradient(to left, rgba(255,255,255,0), #{$code-background});
  }
  &:after {
    right: 0;
    background-image: linear-gradient(to right, rgba(255,255,255,0), #{$code-background});
  }
  > code {
    display: block;
    padding: #{$gutterWidth} !important;
    &:after {
      content: 'CODE';
      position: absolute;
      top: 0;
      right: 0;
      font-family: Lato;
      font-size: $code-tag-font-size;
      letter-spacing: 1px;
      padding: $code-tag-padding-vertical 7px;
      background-color: rgba(255,255,255,.4);
      border-bottom-left-radius: $control-border-radius;
      color: #FFF;
      z-index: 2;
    }
    &[data-filename][data-filename]:after {
      content: attr(data-filename);
      text-transform: uppercase;
    }
  }
  &.sh > code {
    &:after {
      content: 'TERMINAL';
    }
    .hljs-built_in {
      color: inherit;
    }
  }
  &.html > code:after {
    content: 'HTML';
  }
  &.css > code:after {
    content: 'CSS';
  }
  &.scss > code:after {
    content: 'SCSS';
  }
  &.js > code:after {
    content: 'JAVASCRIPT';
  }
  &.json > code:after {
    content: 'JSON';
  }
  &.ejs > code:after {
    content: 'EJS';
  }
  &.ddl > code:after {
    content: 'DDL';
  }
  &.sql > code:after {
    content: 'SQL';
  }
  &.txt > code:after {
    content: 'TEXT';
  }
  &.notepad {
    @apply .border .border-solid .border-border-color;
    &:before {
      content: none;
    }
    &:after {
      content: none;
    }
    > code {
      color: black;
      font-family: monospace;
      background-color: white;
      &:after {
        content: 'NOTEPAD';
      }
    }
  }
  &.output {
    cursor: not-allowed;
    user-select: none;
    > code:after {
      content: 'OUTPUT';
    }
  }
  + .result, + .output {
    margin-top: "calc(-1em - %s)" % #{$control-border-radius};
    border-top: #{$control-border-radius} solid #{$code-background};
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    background-color: #{$brand-default-light};
    position: relative;
    z-index: 1;
  }
  + .output {
    border-top: 1px solid transparentify(#{$code-background}, white, .6);
  }
}

.xml, .html {
  .css, .javascript {
    opacity: 1;
  }
}

div.result {
  pre {
    &:before {
      content: none;
    }
    &:after {
      content: none;
    }
  }
}

// -----
// NOTES
// -----

p:empty {
  display: none;
}

p, div {
  &.warning, &.danger, &.error, &.note, &.muted, &.result {
    position: relative;
    border-radius: $control-border-radius;
    margin: #{$gutterWidth} 0;
    &:after {
      position: absolute;
      top: 0;
      right: 0;
      font-family: Lato;
      font-size: $code-tag-font-size;
      letter-spacing: 1px;
      padding: #{$code-tag-padding-vertical} 7px;
      border-bottom-left-radius: $control-border-radius;
      z-index: 2;
      color: white;
    }
    > :first-child {
      margin-top: 0
    }
    > :last-child {
      margin-bottom: 0
    }
  }
  &.warning {
    padding: $gutterWidth;
    background-color: #{$muted-light-yellow};
    border: 1px solid #{$brand-warning-light};
    &:after {
      content: 'WARNING';
      background-color: #{$brand-warning-dark};
    }
  }
  &.danger, &.error {
    padding: $gutterWidth;
    background-color: #{$muted-light-red};
    border: 1px solid #{$brand-danger-light};
    &:after {
      background-color: #{$brand-danger-dark};
    }
  }
  &.error:after {
    content: 'ERROR';
  }
  &.danger:after {
    content: 'DANGER';
  }
  &.note {
    padding: $gutterWidth;
    background: #{$muted-light-note};
    border: 1px solid #{$brand-note-light};
    border-radius: $control-border-radius;
    &:after {
      content: 'NOTE';
      background-color: #{$brand-note-dark};
    }
  }
  &.result {
    padding: $gutterWidth;
    border: 1px solid #{$control-border-color};
    border-radius: $control-border-radius;
    &:after {
      content: 'RESULT';
      background-color: rgba(0,0,0,.1);
      color: inherit;
    }
    &.poetry {
      line-height: 1.7;
      &:after {
        content: 'POETRY';
      }
      pre {
        font-family: inherit;
      }
    }
  }
  &.muted {
    opacity: .7;
  }
}

// -----
// FORMS
// -----

input:not([type]), input[type="email"], input[type="number"], input[type="search"], input[type="text"]:not(.CodeMirror-search-field), input[type="tel"], input[type="date"], input[type="url"], input[type="password"], textarea, select {
  @apply .h-control-height .px-control-horizontal .py-control-vertical;
  @apply .bg-default-light .border .border-solid .border-border-color;
  @apply .rounded-control-radius .shadow-none .align-bottom;
  &:focus {
    @apply .border-primary-light .outline-none;
  }
  &[disabled] {
    opacity: .8;
    @apply .cursor-not-allowed;
  }
}

input:not([type]), input[type="email"], input[type="number"], input[type="search"], input[type="text"], input[type="tel"], input[type="date"], input[type="url"], input[type="password"], textarea {
  @apply .appearance-none .w-full;
}

input[type="checkbox"], input[type="radio"] {
  @apply .inline;
}

textarea {
  min-height: 100px;
  @apply .resize-y;
}

label, legend {
  @apply .block .text-text-color .font-semibold;
  $gutterWidth: get('margin.gutter-width');
  font-family: Lato;
  font-size: 1.1em;
  margin-bottom: calc(#{$gutterWidth} * .2);
}

label.with-inline-input {
  @apply .cursor-pointer .mb-0;
  > input {
    margin-right: 5px;
    position: relative;
    bottom: 1px;
  }
}

label > input[type=checkbox] {
  @apply .h-4 .align-middle .cursor-pointer;
  + span {
    @apply .align-middle .cursor-pointer;
  }
}

fieldset {
  @apply .p-0 .border-0;
}

.stretch-row {
  $gutterWidth: get('margin.gutter-width');
  margin: #{$gutterWidth} 0;
  @apply .flex;
  .stretch-col {
    @apply .w-full;
    margin: 0 calc(#{$gutterWidth} * .5);
    &:first-child {
      margin-left: 0;
    }
    &:last-child {
      margin-right: 0;
    }
    &[disabled] {
      @apply .relative;
      &:after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255,255,255,.4);
        cursor: not-allowed;
      }
      input[disabled] {
        opacity: 1;
      }
    }
    > :first-child {
      margin-top: 0;
    }
    > :last-child {
      margin-bottom: 0;
    }
  }
}

.heading-basic-data {
  opacity: .8;
  margin-bottom: 0;
  font-family: 'Lato';
  > .stretch-col:last-of-type:not(:only-of-type) {
    text-align: right;
  }
}

@import "layouts/_container";
@import "pages/_landing";

@import "tailwind/_utilities";

/* Custom utilities, https://tailwindcss.com/docs/adding-new-utilities */

.bg-image {
  background-image: config('files.background-image');
}

.external-link-image {
  content: '';
  -webkit-mask-image: config('files.external-link-image');
  display: inline-block;
  background-size: .7em;
  height: .7em;
  margin-left: 5px;
  width: .7em;
}

.pin-t-down {
  top: config('adjust.top-down');
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

.trans-ease-all {
  transition: config('trans.ease-all');
}

// -------
// LESSONS
// -------

$lesson-card-default-opacity: .8;
$lesson-card-transition-duration: .3s;
$lesson-card-other-is-selected-opacity: .3;
$lesson-card-other-is-selected-blur: 1px;
$lesson-card-approved-opacity: $lesson-card-default-opacity * .8;
$lesson-card-approved-bg: lighten($muted-light-success, 50%);

.lesson-lang-tag.lesson-lang-tag {
  $borderRadius: config('borderRadius.control-radius');
  margin-top: -2px;
  padding: calc(#{$gutterWidth} * .1) calc(#{$gutterWidth} * .25);
  border-radius: #{$borderRadius};
  letter-spacing: 1px;
  font-size: .9em;
}

.lesson-graph-container {
  position: relative;
  padding-bottom: 16px;
  overflow-x: auto;
  padding: $gutterWidth;
}

.lesson-graph-card {
  @apply .flex .flex-col .absolute .bg-default-light;
  @apply .border .border-solid .border-border-color .rounded-control-radius;
  top: 0;
  padding: $gutterWidth;
  opacity: $lesson-card-default-opacity;
  transition: border-color $lesson-card-transition-duration;
  &.recommended {
    opacity: 1 !important;
    box-shadow: 0 0 20px 5px rgba($brand-primary-light, .2);
  }
  &.postreq-selected {
    opacity: 1;
  }
  &.approved {
    background-color: $lesson-card-approved-bg;
  }
  &:hover {
    border-color: $brand-primary-light;
    box-shadow: 0 0 0 1px #{$brand-primary-light};
    height: auto !important;
    opacity: 1;
    z-index: 1;
    &.recommended {
      box-shadow: 0 0 20px 5px rgba($brand-primary-light, .2), 0 0 0 1px #{$brand-primary-light};
    }
    > h3 {
      white-space: normal;
    }
  }
  &.other-is-selected:not(.postreq-selected):not(.approved) {
    filter: blur($lesson-card-other-is-selected-blur);
    opacity: $lesson-card-other-is-selected-opacity;
  }
  > h3 {
    margin-top: 0;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
}

.lesson-graph-card-details {
  > .stretch-row {
    &:first-child {
      margin-top: 0;
    }
    &:last-child {
      margin-bottom: 0;
    }
    > .stretch-col {
      &:last-child {
        text-align: right;
      }
    }
  }
}

.lesson-graph-card-metadata > .stretch-col {
  position: relative;
  overflow: visible;
  font-family: Lato;
  white-space: nowrap;
  margin-left: 0;
  flex-shrink: 999;
  &:last-child {
    flex-shrink: 1;
  }
}

.lessons-map-corner-action-lesson-button {
  position: absolute;
  top: -1px;
  right: -1px;
  border-top: none;
  border-right: none;
  border-top-left-radius: 0;
  border-top-right-radius: config('borderRadius.control-radius');
  border-bottom-right-radius: 0;
  margin-top: 0;
}

.lessons-map-project-status {
  display: inline-block;
  padding: 4px 6px;
  line-height: 1.5;
  letter-spacing: 1px;
  position: absolute;
  right: 0;
  bottom: 0;
  @apply .bg-muted-light-tan;
  &.approved {
    background-color: $lesson-card-approved-bg;
    border: 1px solid transparent;
    &:hover {
      border: 1px solid #{$control-border-color};
    }
  }
  &.changes-requested {
    @apply .bg-muted-light-red;
    bottom: -5px;
  }
  &.awaiting-feedback {
    bottom: -5px;
  }
}

.lesson-graph-edge {
  stroke-width: 2px;
  fill: transparent;
  pointer-events: none;
  transition: stroke #{$lesson-card-transition-duration};
  &.approved {
    stroke: #{$brand-primary-light} !important;
    opacity: $lesson-card-approved-opacity;
  }
  &.postreq-selected {
    stroke-width: 3px;
    opacity: $lesson-card-approved-opacity;
    stroke: #{$brand-primary-light} !important;
  }
  &.other-is-selected:not(.postreq-selected):not(.approved) {
    filter: blur(#{$lesson-card-other-is-selected-blur});
    opacity: $lesson-card-other-is-selected-opacity;
  }
}

// ----------------
// RENDERED CONTENT
// ----------------

.rendered-content-container {
  display: flex;
  flex-direction: column;
}

.rendered-content {
  flex-grow: 1;
  @apply .border .border-solid .border-muted-light-gray;
  @apply .bg-default-light .rounded-control-radius;
  padding: $gutterWidth;
  img {
    display: block;
    margin: 0 auto;
    padding: $gutterWidth;
  }
  > :first-child {
    margin-top: 0;
  }
  > :last-child {
    margin-bottom: 0;
  }
}

.rendered-content-page-navigation {
  align-items: stretch;
  justify-content: space-between;
  position: relative;
  min-height: config('height.control-height');
}

.rendered-content-page-breadcrumb-preview-title {
  display: none;
}

.rendered-content-page-breadcrumb {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  width: 100%;
  &:not(.active):hover {
    .rendered-content-page-breadcrumb-preview-title {
      display: block;
      position: absolute;
      top: calc(#{$gutterWidth} * 1.5);
      left: 0;
      width: 100%;
      text-align: center;
      font-weight: 600;
      color: $brand-primary-light;
      z-index: 3;
      background-color: transparent;
      pointer-events: none;
    }
    circle {
      fill: lighten(desaturate($brand-primary-light, 10%), 5%);
    }
    &.label-placement-top {
      .rendered-content-page-breadcrumb-preview-title {
        top: auto;
        bottom: calc(#{$gutterWidth} * 1.5);
      }
    }
  }
  svg {
    max-width: 10px;
    max-height: 10px;
  }
  circle {
    fill: lighten(desaturate($brand-primary-light, 40%), 40%);
  }
  &.active {
    cursor: default;
    circle {
      fill: $brand-primary-dark;
      stroke-width: 1px;
      stroke: $brand-primary-dark;
    }
  }
}

.rendered-content-loading-image {
  max-width: 50px;
  display: block;
  margin: 0 auto;
}

.rendered-content-no-content > .note {
  margin-top: 0;
}

// ------
// TABLES
// ------

table {
  width: 100%;
  margin: #{$gutterWidth} 0;
}

th, td {
  padding: calc(#{$gutterWidth} * .5);
  @apply .border .border-solid .border-border-color;
  @apply .bg-muted-light-tan;
}

table.dashboard-info {
  font-family: Lato, Verdana, Arial, sans-serif;
  font-weight: 400;
  padding: 3px;
  @apply .bg-default-light .rounded-control-radius;
  border-spacing: 0;
  border-collapse: separate;
  box-shadow: 0 0 2px 1px #ddd;
  th {
    background-color: transparent;
    border: 0;
    border-left: 1px solid #{$control-border-color};
    border-bottom: 1px solid #{$control-border-color};
    vertical-align: bottom;
  }
  td {
    background-color: transparent;
    border: 0;
    border-left: 1px solid #{$control-border-color};
  }
  th:first-child, td:first-child {
    border-left: 0;
  }
  tr:nth-of-type(even) {
    background-color: darken($brand-default-light, 5%);
  }
}

.numeric-cell {
  text-align: right
}

// ---------------
// LESSON-SPECIFIC
// ---------------

.result.headings-example {
  .h2 {
    font-family: Lato;
    font-size: 1.5em;
    font-weight: bold;
    line-height: 1.3;
  }
  h1, .h2, h3, h4, h5, h6 {
    margin: #{$gutterWidth} 0;
  }
  h1 {
    margin-top: 0p;
  }
  h3 {
    text-transform: none;
  }
  h6 {
    margin-bottom: 0;
  }
}

// -----------
// TRANSITIONS
// -----------

.page-transition-enter-active, .page-transition-leave-active {
  position: absolute;
  width: 100%;
}
.page-transition-enter-active {
  transition: opacity .3s cubic-bezier(.01,.98,.71,.84);
  z-index: 30;
}
.page-transition-leave-active {
  transition: opacity .4s;
  z-index: -1;
}
.page-transition-enter, .page-transition-leave-active {
  opacity: 0;
}
