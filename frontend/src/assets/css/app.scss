@import "tailwind/_preflight";

*,
*:before,
*:after {
  box-sizing: border-box;
}

html {
  @apply .bg-image .bg-grey-lightest .text-black .font-light .font-serif;
  @apply .overflow-x-hidden;
}

body {
  @apply .leading-normal;
}

a {
  @apply .text-primary-lighter .no-underline;

  &:hover {
    @apply .text-primary-dark .underline;
  }

  &[name] {
    @apply .relative .text-primary-dark;

    &:hover:before {
      @apply .absolute;
      left: -0.8em;
    }
  }

  &.container-link {
    @apply .text-inherit;

    &:hover {
      @apply .text-inherit .no-underline;
    }
  }

  &:not(.button):not(.icon-link)[target=_blank]:not([href$=".jpg"]):not([href$=".jpeg"]):not([href$=".svg"]):not([href$=".png"]):not([href$=".gif"]) {
    &:after {
      @apply .bg-primary .external-link-image;
    }
  }
}

abbr,
abbr[title],
acronym,
acronym[title] {
  @apply .no-underline .border-none;
}

.button, button, input[type="submit"], input[type="reset"], input[type="button"] {
  @apply .inline-block .h-control-height;
  @apply .py-0 .px-control-x .text-grey .text-center;
  @apply .text-control-font-size .font-semibold .leading-control-line-height;
  letter-spacing: .1rem;
  @apply .uppercase .no-underline .whitespace-no-wrap;
  @apply .bg-default-light .rounded-control-radius;
  @apply .border .border-solid .border-border-color;
  @apply .cursor-pointer;
  &:hover, &:focus {
    @apply .text-grey-dark .outline-none .no-underline;
    border-color: darken(get('colors.border-color'), 30%);
  }
  &[disabled] {
    @apply .opacity-disabled .cursor-not-allowed;
  }
  &.block {
    @apply .block .w-full .my-gutter-width;
  }
  &.inline { 
    @apply .h-auto .align-middle;
    margin-top: -2px;
    line-height: 1.7;
    $paddingVertical: get('padding.control-vertical');
    padding: 2px calc(#{$paddingVertical} - 1px) 0 #{$paddingVertical};
  }
  &.primary {
    @apply .text-default-light .bg-primary-light .border-primary-dark;
    &:hover, &:focus {
      background-color: darken(get('colors.primary-light'), 10%);
    }
  }
  &.danger {
    @apply .text-default-light .bg-danger-light .border-danger-dark;
    &:hover, &:focus {
      background-color: darken(get('colors.danger-light'), 10%);
    }
  }
  &.warning {
    @apply .text-default-light .bg-warning-light .border-warning-dark;
    &:hover, &:focus {
      background-color: darken(get('colors.warning-light'), 10%);
    }
  }
  &.extra-large {
    $controlHeight: get('height.control-height');
    $button-extra-large-height: calc(#{$controlHeight} * 3);
    height: $button-extra-large-height;
    line-height: $button-extra-large-height;
    font-size: calc(#{$button-extra-large-height} * .3);
    padding: 0 calc(#{$button-extra-large-height} * .4);
  }

}

@import "layouts/_container";
@import "pages/_landing";

@import "tailwind/_utilities";

/* Custom utilities, https://tailwindcss.com/docs/adding-new-utilities */

.bg-image {
  background-image: config('files.background-image');
}

.external-link-image {
  content: '';
  -webkit-mask-image: config('files.external-link-image');
  display: inline-block;
  background-size: .7em;
  height: .7em;
  margin-left: 5px;
  width: .7em;
}

.pin-t-down {
  top: config('adjust.top-down');
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

.trans-ease-all {
  transition: config('trans.ease-all');
}
