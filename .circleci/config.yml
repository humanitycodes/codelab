version: 2
jobs:
  build:
    working_directory: ~/msu.lansing.codes
    parallelism: 1
    shell: /bin/bash --login
    # CircleCI 2.0 does not support environment variables that refer to each other
    environment:
      NODE_ENV: testing
      TZ: /usr/share/zoneinfo/America/Detroit
      YARN_VERSION: 1.7.0
    # Pre-built images list: https://circleci.com/docs/2.0/circleci-images/#nodejs
    docker:
    - image: circleci/node:8.11.3-browsers
      command: /sbin/init
    steps:
    # Setup PATH (can't do in environment section because PATH refers to itself)
    - run:
        working_directory: ~/msu.lansing.codes
        command: echo -e "export PATH=${PATH}:~/msu.lansing.codes/.yarn/bin:~/msu.lansing.codes/node_modules/.bin" >> $BASH_ENV
    # The following `checkout` command checks out your code to your working directory
    - checkout
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-master-
    # Ensure yarn and various cached directories are in place
    - run: |
        if [[ ! -e ~/.yarn/bin/yarn || $(yarn --version) != "${YARN_VERSION}" ]]; then
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
        fi
    - run: sudo mkdir -p ~/.cache/yarn frontend/node_modules backend/node_modules firebase/node_modules test/node_modules
    - run: sudo chmod -R 777 ~/.cache/yarn frontend/node_modules backend/node_modules firebase/node_modules test/node_modules
    # Install all dependencies (if necessary)
    - run: yarn install --pure-lockfile
    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/.yarn
        - ~/.cache/yarn
        - frontend/node_modules
        - backend/node_modules
        - firebase/node_modules
        - test/node_modules
        - ./node_modules
    # Run unit and end-to-end tests
    - run: yarn test-all
    # Save test artifacts
    - store_artifacts:
        path: frontend/test/unit/coverage/lcov-report
        destination: frontend-tests
    - store_artifacts:
        path: test/e2e/reports
        destination: e2e-tests
  deploy_staging:
    working_directory: ~/msu.lansing.codes
    docker:
    - image: docker:stable-git
    steps:
    - checkout
    - run:
        name: Deploy master branch to msu-codes-staging on Heroku
        command: .circleci/deploy-staging.sh
  deploy_production:
    working_directory: ~/msu.lansing.codes
    docker:
    - image: docker:stable-git
    steps:
    - checkout
    - run:
        name: Deploy production branch to msu-lansing-codes on Heroku
        command: .circleci/deploy-production.sh

workflows:
  version: 2
  build_test_deploy:
    jobs:
    - build
    - deploy_staging:
        requires:
        - build
        filters:
          branches:
            only: master
    - deploy_production:
        requires:
        - build
        filters:
          branches:
            only: production
