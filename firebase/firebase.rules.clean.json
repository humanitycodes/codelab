{
  "rules": {
    "users": {
      ".indexOn": ["msuUid"],
      ".read": "auth != null && (root.child('roles/'+auth.uid+'/instructor').val() === true || root.child('roles/'+auth.uid+'/admin').val() === true)",

      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && ((!data.exists() && auth.uid === $uid) || root.child('roles/'+auth.uid+'/admin').val() === true)",

        "msuUid": {
          ".validate": "!newData.exists() || (newData.isString() && newData.val().length > 0)"
        },
        "fullName": {
          ".validate": "newData.exists() && newData.isString() && newData.val().length > 0"
        },
        "email": {
          ".validate": "newData.exists() && newData.isString() && newData.val().length > 0"
        },
        "github": {
          "login": {
            ".validate": "newData.exists() && newData.isString()"
          },
          "scope": {
            ".validate": "newData.exists() && newData.isString()"
          },
          "token": {
            ".validate": "newData.exists() && newData.isString()"
          },
          "tokenType": {
            ".validate": "newData.exists() && newData.isString()"
          },
          "userId": {
            ".validate": "newData.exists() && newData.isNumber()"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },

    "roles": {
      ".read": "auth != null && (root.child('roles/'+auth.uid+'/instructor').val() === true || root.child('roles/'+auth.uid+'/admin').val() === true)",

      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && ((!data.exists() && auth.uid === $uid) || root.child('roles/'+auth.uid+'/admin').val() === true)",
        ".validate": "(data.exists() || ((!newData.child('instructor').exists() || newData.child('instructor').val() === false) && (!newData.child('admin').exists() || newData.child('admin').val() === false)))",

        "instructor": {
          ".validate": "newData.isBoolean()"
        },
        "admin": {
          ".validate": "newData.isBoolean()"
        },
        "$other": {
          ".validate": false
        }
      }
    },

    "lessons": {
      ".read": "auth != null && (root.child('roles/'+auth.uid+'/instructor').val() === true || root.child('roles/'+auth.uid+'/admin').val() === true)",
      ".write": "auth != null && (root.child('roles/'+auth.uid+'/instructor').val() === true || root.child('roles/'+auth.uid+'/admin').val() === true)",

      "$key": {
        ".validate": "$key.matches(/^[-a-z]+$/)",

        "createdBy": {
          ".validate": "root.child('users').child(newData.val()).exists()"
        },
        "title": {
          ".validate": "newData.exists() && newData.isString()"
        },
        "estimatedHours": {
          ".validate": "newData.exists() && newData.isNumber() && newData.val() > 0"
        },
        "learningObjectives": {
          "$lokey": {
            "content": {
              ".validate": "newData.exists() && newData.isString() && newData.val().length > 0"
            }
          }
        },
        "content": {
          ".validate": "newData.exists() && newData.isString()"
        },
        "notes": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "prereqKeys": {
          "$prereq_key": {
            ".validate": "root.child('lessons').child($prereq_key).exists() && newData.val() === true"
          }
        },

        "$other": {
          ".validate": false
        }
      }
    },

    "courses": {
      ".read": "auth != null && (root.child('roles/'+auth.uid+'/instructor').val() === true || root.child('roles/'+auth.uid+'/admin').val() === true)",
      ".write": "auth != null && (root.child('roles/'+auth.uid+'/instructor').val() === true || root.child('roles/'+auth.uid+'/admin').val() === true)",

      "$key": {
        ".read": "auth != null && data.child('studentKeys').child(auth.uid).val() === true",
        ".validate": "$key.matches(/^[-A-Z0-9]+$/)",

        "createdBy": {
          ".validate": "root.child('users').child(newData.val()).exists()"
        },
        "title": {
          ".validate": "newData.exists() && newData.isString()"
        },
        "credits": {
          ".validate": "newData.exists() && newData.isNumber() && newData.val() > 0"
        },
        "syllabus": {
          ".validate": "newData.exists() && newData.isString()"
        },
        "startDate": {
          ".validate": "newData.exists() && newData.isString()"
        },
        "endDate": {
          ".validate": "newData.exists() && newData.isString()"
        },
        "lessonKeys": {
          "$lessonkey": {
            ".validate": "root.child('lessons').child($lessonkey).exists() && newData.val() === true"
          }
        },
        "studentKeys": {
          "$studentkey": {
            ".validate": "root.child('users').child($studentkey).exists() && newData.val() === true"
          }
        },

        "$other": {
          ".validate": false
        }
      }
    }
  }
}
